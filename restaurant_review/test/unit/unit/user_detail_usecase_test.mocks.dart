// Mocks generated by Mockito 5.4.4 from annotations
// in restaurant_review/test/unit/user_detail_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:restaurant_review/domain/entities/user_detail_entity.dart'
    as _i2;
import 'package:restaurant_review/infrastructure/repository/user_detail_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserDetail_0 extends _i1.SmartFake implements _i2.UserDetail {
  _FakeUserDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i3.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserDetail> fetchUser() => (super.noSuchMethod(
        Invocation.method(
          #fetchUser,
          [],
        ),
        returnValue: _i4.Future<_i2.UserDetail>.value(_FakeUserDetail_0(
          this,
          Invocation.method(
            #fetchUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserDetail>);

  @override
  _i4.Future<String> updatePasswordReq({
    required String? oldPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePasswordReq,
          [],
          {
            #oldPassword: oldPassword,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #updatePasswordReq,
            [],
            {
              #oldPassword: oldPassword,
              #newPassword: newPassword,
            },
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> updateUsernameReq({required String? username}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUsernameReq,
          [],
          {#username: username},
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #updateUsernameReq,
            [],
            {#username: username},
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> deleteAccountReq() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccountReq,
          [],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #deleteAccountReq,
            [],
          ),
        )),
      ) as _i4.Future<String>);
}
