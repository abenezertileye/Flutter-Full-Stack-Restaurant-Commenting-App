// Mocks generated by Mockito 5.4.4 from annotations
// in restaurant_review/test/unit/restaurant_crud_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_review/domain/entities/create_restaurant_entity.dart'
    as _i5;
import 'package:restaurant_review/domain/entities/update_restaurant_entity.dart'
    as _i6;
import 'package:restaurant_review/infrastructure/repository/restaurant_crud_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RestaurantCrudRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestaurantCrudRepository extends _i1.Mock
    implements _i3.RestaurantCrudRepository {
  MockRestaurantCrudRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response> checkOwnerRestaurant() => (super.noSuchMethod(
        Invocation.method(
          #checkOwnerRestaurant,
          [],
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #checkOwnerRestaurant,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> createRestaurant(
          _i5.CreateRestaurantDTO? restaurant) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRestaurant,
          [restaurant],
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #createRestaurant,
            [restaurant],
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> updateRestaurant(
    String? id,
    _i6.UpdateRestaurantDTO? restaurant,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRestaurant,
          [
            id,
            restaurant,
          ],
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #updateRestaurant,
            [
              id,
              restaurant,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> deleteRestaurant(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteRestaurant,
          [id],
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #deleteRestaurant,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Response>);
}
